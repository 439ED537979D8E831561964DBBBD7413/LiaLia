package cn.chono.yopper.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import cn.chono.yopper.R;
import cn.chono.yopper.photo.ImageItem;
import cn.chono.yopper.photo.ImageSelectedDto;
import cn.chono.yopper.utils.UnitUtil;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.lidroid.xutils.util.LogUtils;

public class AlbumAdapter extends BaseAdapter {
	final String TAG = getClass().getSimpleName();

	public interface OnItemClickLitener {

		/**
		 * 内容图片点击监听
		 * 
		 * @param view
		 * @param position
		 */
		void onIsSelectedItemClick(View view, int position, boolean isSelected,
				ImageItem imageItem);

		void onItemClick(View view, int position);

	}

	private OnItemClickLitener mOnItemClickLitener;

	public void setOnItemClickLitener(OnItemClickLitener mOnItemClickLitener) {
		this.mOnItemClickLitener = mOnItemClickLitener;
	}

	public static interface TextCallback {
		public void onListen(int count);
	}

	private Context context;

	public AlbumAdapter(Context context) {
		this.context = context;
	}

	public class NewViewHolder {
		private ImageView imageView;
		private ImageView isselected;
		private LinearLayout isselectedLayout;
		private RelativeLayout relativeLayout;

	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return ImageSelectedDto.imageList == null ? 0
				: ImageSelectedDto.imageList.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return ImageSelectedDto.imageList.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	private NewViewHolder newViewHolder;

	@SuppressWarnings("unused")
	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		View v = null;
		if (v == null) {
			newViewHolder = new NewViewHolder();
			v = LayoutInflater.from(context).inflate(
					R.layout.album_item_layout, null);

			newViewHolder.imageView = (ImageView) v.findViewById(R.id.image);
			newViewHolder.isselected = (ImageView) v
					.findViewById(R.id.isselected);
			newViewHolder.isselectedLayout = (LinearLayout) v
					.findViewById(R.id.isselectedLayout);

			newViewHolder.relativeLayout = (RelativeLayout) v
					.findViewById(R.id.relativeLayout);

			int weight = UnitUtil.getScreenWidthPixels(context);

			RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) newViewHolder.imageView
					.getLayoutParams();
			params.width = weight / 4;
			params.height = weight / 4;

			newViewHolder.imageView.setLayoutParams(params);

			v.setTag(newViewHolder);

		} else {
			newViewHolder = (NewViewHolder) v.getTag();
		}

		String imagepath = ImageSelectedDto.imageList.get(position).imagePath;

		final boolean isSelected = ImageSelectedDto.imageList.get(position).isSelected;
		ImageItem iamgeItem = ImageSelectedDto.imageList.get(position);

		if (ImageSelectedDto.selectedList.contains(iamgeItem)) {
			newViewHolder.isselected
					.setImageResource(R.drawable.album_icon_yes);

		} else {
			newViewHolder.isselected.setImageResource(R.drawable.album_icon_no);
		}

		Glide.with(context).load(imagepath)
				.error(R.drawable.error_default_icon)
				.diskCacheStrategy(DiskCacheStrategy.NONE)
				.into(newViewHolder.imageView);

		// 如果设置了回调，则设置点击事件
		if (mOnItemClickLitener != null) {

			newViewHolder.relativeLayout.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {

					mOnItemClickLitener.onIsSelectedItemClick(
							newViewHolder.relativeLayout, position,
							isSelected,
							ImageSelectedDto.imageList.get(position));
				}
			});

//			newViewHolder.relativeLayout.setOnClickListener(new OnClickListener() {
//
//				@Override
//				public void onClick(View v) {
//					mOnItemClickLitener.onItemClick(newViewHolder.relativeLayout, position);
//
//				}
//			});
		}

		return v;
	}

}
