package cn.chono.yopper.adapter;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

import java.util.ArrayList;
import java.util.List;

import cn.chono.yopper.R;
import cn.chono.yopper.Service.Http.FaceratingList.FaceratingListDate;
import cn.chono.yopper.YpSettings;
import cn.chono.yopper.glide.CropCircleTransformation;
import cn.chono.yopper.utils.ImgUtils;
import cn.chono.yopper.utils.TimeUtil;

/**
 * Created by zxb on 2015/12/8.
 */
public class ScoreAlreadyAdapter extends RecyclerView.Adapter<ScoreAlreadyAdapter.AlreadyViewHolder> implements com.timehop.stickyheadersrecyclerview.StickyRecyclerHeadersAdapter<ScoreAlreadyAdapter.HeaderViewHolder> {

    public interface OnItemClickLitener {
        void onItemClick(View view, int position, int userID);

    }

    private OnItemClickLitener mOnItemClickLitener;

    public void setOnItemClickLitener(OnItemClickLitener mOnItemClickLitener) {
        this.mOnItemClickLitener = mOnItemClickLitener;
    }



    private Context context;
    private LayoutInflater mInflater;

    private CropCircleTransformation transformation;

    private BitmapPool mPool;

    public ScoreAlreadyAdapter(Context context) {
        setHasStableIds(true);
        this.context = context;
        mInflater = LayoutInflater.from(context);
        mPool = Glide.get(context).getBitmapPool();
        transformation = new CropCircleTransformation(mPool);
    }

    private List<FaceratingListDate> listDtos;

    public void setData(List<FaceratingListDate> listDtos) {
        this.listDtos = listDtos;
    }

    public List<FaceratingListDate> getData() {
        return listDtos;
    }

    public void addData(List<FaceratingListDate> addListdata) {
        if (null == listDtos) {
            listDtos = new ArrayList<>();
        }
        listDtos.addAll(addListdata);

    }


    @Override
    public AlreadyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View itemView = mInflater.inflate(R.layout.score_already_item_layout, parent, false);
        return new AlreadyViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(final AlreadyViewHolder holder, final int position) {

        String imageurl = ImgUtils.DealImageUrl(listDtos.get(position).getTargetUser().getHeadImg(), YpSettings.IMG_SIZE_150,
                YpSettings.IMG_SIZE_150);
        Glide.with(context).load(imageurl).error(R.drawable.error_default_icon).bitmapTransform(transformation)
                .into(holder.userIcon);
        holder.score_already_item_name_tv.setText(listDtos.get(position).getTargetUser().getName());
        if (listDtos.get(position).getTargetUser().getSex() == 1) {
            //男性
            holder.score_already_item_constellation_tv.setBackgroundResource(R.drawable.look_video_man_bg);

        } else {
            // 女性
            holder.score_already_item_constellation_tv.setBackgroundResource(R.drawable.look_video_women_bg);
        }

        holder.score_already_item_time_tv.setText(TimeUtil.getHourAndMin(TimeUtil.getFormat(listDtos.get(position).getRateTime())));

        int result = listDtos.get(position).getResult();

        if (result == 0) {
            holder.score_already_item_lvevl_tv.setText("丑");
            holder.score_already_item_lvevl_iv.setImageResource(R.drawable.score_expression_clown_icon);
        } else if (result == 1) {
            holder.score_already_item_lvevl_tv.setText("一般");
            holder.score_already_item_lvevl_iv.setImageResource(R.drawable.score_expression_general_icon);
        } else if (result == 2) {
            holder.score_already_item_lvevl_tv.setText("帅");
            holder.score_already_item_lvevl_iv.setImageResource(R.drawable.score_expression_handsome_icon);

        } else if (result == 3) {
            holder.score_already_item_lvevl_tv.setText("很帅");
            holder.score_already_item_lvevl_iv.setImageResource(R.drawable.score_expression_very_handsome_icon);

        }


        if (null !=mOnItemClickLitener){
            holder.userIcon.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    mOnItemClickLitener.onItemClick( holder.userIcon,position,listDtos.get(position).getTargetUser().getId());
                }
            });
        }

    }


    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public long getHeaderId(int position) {
        return listDtos.get(position).getGroupingId();
    }

    @Override
    public HeaderViewHolder onCreateHeaderViewHolder(ViewGroup parent) {
        View hearView = mInflater.inflate(R.layout.score_already_item_header_layout, parent, false);
        return new HeaderViewHolder(hearView);
    }

    @Override
    public void onBindHeaderViewHolder(HeaderViewHolder holder, int position) {
        holder.score_already_item_header_tv.setText("今日打分记录");
    }


    @Override
    public int getItemCount() {
        return listDtos == null ? 0 : listDtos.size();
    }


    public static class AlreadyViewHolder extends RecyclerView.ViewHolder {
        private ImageView userIcon;
        private ImageView score_already_item_lvevl_iv;
        private TextView score_already_item_name_tv;
        private TextView score_already_item_constellation_tv;
        private TextView score_already_item_time_tv;
        private TextView score_already_item_lvevl_tv;


        public AlreadyViewHolder(View itemView) {
            super(itemView);

            userIcon = (ImageView) itemView.findViewById(R.id.userIcon);
            score_already_item_lvevl_iv = (ImageView) itemView.findViewById(R.id.score_already_item_lvevl_iv);

            score_already_item_name_tv = (TextView) itemView.findViewById(R.id.score_already_item_name_tv);
            score_already_item_constellation_tv = (TextView) itemView.findViewById(R.id.score_already_item_constellation_tv);
            score_already_item_time_tv = (TextView) itemView.findViewById(R.id.score_already_item_time_tv);
            score_already_item_lvevl_tv = (TextView) itemView.findViewById(R.id.score_already_item_lvevl_tv);

        }
    }

    public static class HeaderViewHolder extends RecyclerView.ViewHolder {
        private TextView score_already_item_header_tv;

        public HeaderViewHolder(View itemView) {
            super(itemView);
            score_already_item_header_tv = (TextView) itemView.findViewById(R.id.score_already_item_header_tv);
        }
    }

}
