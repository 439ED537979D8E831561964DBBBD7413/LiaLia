package cn.chono.yopper.adapter;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

import java.util.List;

import cn.chono.yopper.R;
import cn.chono.yopper.YpSettings;
import cn.chono.yopper.activity.usercenter.UserInfoActivity;
import cn.chono.yopper.data.AppointmentDto;
import cn.chono.yopper.data.Constant;
import cn.chono.yopper.glide.CropCircleTransformation;
import cn.chono.yopper.utils.ActivityUtil;
import cn.chono.yopper.utils.CheckUtil;
import cn.chono.yopper.utils.ISO8601;
import cn.chono.yopper.utils.ImgUtils;
import cn.chono.yopper.utils.TimeUtil;
import cn.chono.yopper.utils.UnitUtil;
import cn.chono.yopper.view.ProgressBarView;

public class AppointListAdapter extends RecyclerView.Adapter<AppointListAdapter.ViewHolder>{

	private  List<AppointmentDto> list;;

	private Context mContext;

	private CropCircleTransformation transformation;

	private BitmapPool mPool;

	private int sortType;

	public interface OnItemClickLitener {
		void onItemClick(View view, int position);

	}
	private OnItemClickLitener mOnItemClickLitener;

	public void setOnItemClickLitener(OnItemClickLitener mOnItemClickLitener) {
		this.mOnItemClickLitener = mOnItemClickLitener;
	}

	public AppointListAdapter( Context context ,List<AppointmentDto> list){
		this.mContext = context;
		this.list = list;

		mPool = Glide.get(context).getBitmapPool();
		transformation = new CropCircleTransformation(mPool);

	}




	@Override
	public ViewHolder onCreateViewHolder( ViewGroup viewGroup, int i ){
		// 给ViewHolder设置布局文件
		int WS=UnitUtil.getScreenWidthPixels(mContext);
		int dip=(int) UnitUtil.getScreenDIP(mContext);
		View v=null;

//		if(WS>=1080 && dip==2){
//			v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.bigscreen_ldip_appoint_list_item_layout, viewGroup, false);
//		}else{
		v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.appoint_list_item_layout, viewGroup, false);
//		}
		return new ViewHolder(v);
	}

	@SuppressWarnings("unchecked")
	@Override
	public void onBindViewHolder( final ViewHolder viewHolder, int i ){
		// 给ViewHolder设置元素
		AppointmentDto dto = list.get(i);


		if(!CheckUtil.isEmpty(dto.getOwner().getName())){
			viewHolder.appoint_list_item_name_tv.setText(dto.getOwner().getName());
		}

		if(dto.getOwner().getSex()==1){
			viewHolder.appoint_list_item_sex_hor_tv.setBackgroundResource(R.drawable.appoint_item_male_bg);
			Drawable sexdrawable=mContext.getResources().getDrawable(R.drawable.new_sex_male_icon);
			sexdrawable.setBounds(0, 0, sexdrawable.getIntrinsicWidth(), sexdrawable.getIntrinsicHeight());
			viewHolder.appoint_list_item_sex_hor_tv.setCompoundDrawables(sexdrawable,null,null,null);
		}else{
			viewHolder.appoint_list_item_sex_hor_tv.setBackgroundResource(R.drawable.appoint_item_female_bg);
			Drawable sexdrawable=mContext.getResources().getDrawable(R.drawable.new_sex_female_icon);
			sexdrawable.setBounds(0, 0, sexdrawable.getIntrinsicWidth(), sexdrawable.getIntrinsicHeight());
			viewHolder.appoint_list_item_sex_hor_tv.setCompoundDrawables(sexdrawable,null,null,null);
		}

		String hor_str=CheckUtil.ConstellationMatching(dto.getOwner().getHoroscope());
		viewHolder.appoint_list_item_sex_hor_tv.setText(hor_str);

		if (((dto.getOwner().getStatus() >> 1) & 1) == 0) {
			viewHolder.appoint_list_item_video_lable_iv.setVisibility(View.GONE);
		}else{
			viewHolder.appoint_list_item_video_lable_iv.setVisibility(View.VISIBLE);
		}

		if (dto.getOwner().getLevel() == 1) {
			viewHolder.appoint_list_item_level_men_iv.setVisibility(View.VISIBLE);
		}else{
			viewHolder.appoint_list_item_level_men_iv.setVisibility(View.GONE);
		}

		if(!CheckUtil.isEmpty(dto.getOwner().getHeadImg())){
			String imageurl= ImgUtils.DealImageUrl(dto.getOwner().getHeadImg(),150,150);
			Glide.with(mContext).load(imageurl).bitmapTransform(transformation).into(viewHolder.appoint_list_item_userImg_iv);
		}

		switch (dto.getActivityType()){
			case Constant.APPOINT_TYPE_BAR:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_bar);
				break;
			case Constant.APPOINT_TYPE_COFFEE:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_coffee);

				break;
			case Constant.APPOINT_TYPE_MOVIE:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_movie);
				break;
			case Constant.APPOINT_TYPE_DOG:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_dog);
				break;
			case Constant.APPOINT_TYPE_FITNESS:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_fitness);
				break;
			case Constant.APPOINT_TYPE_KTV:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_ktv);
				break;
			case Constant.APPOINT_TYPE_EAT:
				viewHolder.appoint_list_item_datingtype_iv.setBackgroundResource(R.drawable.chat_appoint_eat);
				break;
		}

		if(!CheckUtil.isEmpty(dto.getTitle())){
			viewHolder.appoint_list_item_datingtype_tv.setText(dto.getTitle());
		}

		if(dto.getActivityType()!=Constant.APPOINT_TYPE_DOG && dto.getActivityType()!=Constant.APPOINT_TYPE_FITNESS ){

			viewHolder.appoint_list_item_costtype_tv.setVisibility(View.VISIBLE);
			if(dto.getCostType()==0){
				viewHolder.appoint_list_item_costtype_tv.setText("我请客");
			}else  if(dto.getCostType()==1){
				viewHolder.appoint_list_item_costtype_tv.setText("AA");
			}else if(dto.getCostType()==2){
				viewHolder.appoint_list_item_costtype_tv.setText("你买单");
			}
		}else{
			viewHolder.appoint_list_item_costtype_tv.setVisibility(View.GONE);
		}

		if(dto.getActivityType()==Constant.APPOINT_TYPE_MOVIE){
			viewHolder.appoint_list_item_address_iv.setBackgroundResource(R.drawable.appoint_item_movice_icon);
		}else{
			viewHolder.appoint_list_item_address_iv.setBackgroundResource(R.drawable.appoint_item_address_icon);
		}

		if(!CheckUtil.isEmpty(dto.getContent())){
			viewHolder.appoint_list_item_address_tv.setText(dto.getContent());
		}

		long endtime=ISO8601.getTime(dto.getEndTime());
		String endtimeStr=TimeUtil.getDatingDateString(endtime,System.currentTimeMillis());

		if(!endtimeStr.contains("今天")){
			endtimeStr=endtimeStr+"之前";
		}else{
			endtimeStr=endtimeStr+"" ;
		}

		if(dto.getAvailableTime()==1){
			endtimeStr=endtimeStr+",中午";
		}else if(dto.getAvailableTime()==2){
			endtimeStr=endtimeStr+",下午";
		}else if(dto.getAvailableTime()==3){
			endtimeStr=endtimeStr+",晚上";
		}

		viewHolder.appoint_list_item_time_tv.setText(endtimeStr);

		viewHolder.appoint_list_item_look_num_tv.setText(dto.getPageView()+"");
		viewHolder.appoint_list_item_join_num_tv.setText(dto.getTotalCandidates()+"");


		if(dto.getMatchScore()==null){
			viewHolder.appoint_list_item_info_pb.setVisibility(View.INVISIBLE);
			viewHolder.appoint_list_item_qinmi_pb.setVisibility(View.INVISIBLE);
			viewHolder.appoint_list_item_safe_pb.setVisibility(View.INVISIBLE);
			viewHolder.appoint_list_item_all_pbv.setVisibility(View.INVISIBLE);
		}else{
			viewHolder.appoint_list_item_info_pb.setVisibility(View.VISIBLE);
			viewHolder.appoint_list_item_qinmi_pb.setVisibility(View.VISIBLE);
			viewHolder.appoint_list_item_safe_pb.setVisibility(View.VISIBLE);
			viewHolder.appoint_list_item_all_pbv.setVisibility(View.VISIBLE);

			viewHolder.appoint_list_item_info_pb.setProgress(dto.getMatchScore().getProfile());
			viewHolder.appoint_list_item_qinmi_pb.setProgress(dto.getMatchScore().getMagic());
			viewHolder.appoint_list_item_safe_pb.setProgress(dto.getMatchScore().getSafety());
			viewHolder.appoint_list_item_all_pbv.setProgress(dto.getMatchScore().getTotalMatch());
		}

		viewHolder.appoint_list_item_all_pbv.setProgressBar_max(100);
		viewHolder.appoint_list_item_all_pbv.setPromptTextIsDisplayable(true);
		viewHolder.appoint_list_item_all_pbv.setPromptTextCrompttext("匹配度");
		viewHolder.appoint_list_item_all_pbv.setOutside_round_style(ProgressBarView.STROKE_FILL);


		viewHolder.appoint_list_item_pb_layout.setVisibility(View.GONE);
		viewHolder.appoint_list_item_dating_info_layout.setVisibility(View.VISIBLE);
		viewHolder.appoint_list_item_dating_layout.setBackgroundResource(R.drawable.appoint_item_normal_card_bg);

		viewHolder.appoint_list_item_all_pbv.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				if(viewHolder.appoint_list_item_pb_layout.getVisibility()==View.GONE){
					viewHolder.appoint_list_item_pb_layout.setVisibility(View.VISIBLE);
					viewHolder.appoint_list_item_dating_info_layout.setVisibility(View.GONE);
					viewHolder.appoint_list_item_dating_layout.setBackgroundResource(R.drawable.appoint_item_selected_card_bg);
				}else{
					viewHolder.appoint_list_item_pb_layout.setVisibility(View.GONE);
					viewHolder.appoint_list_item_dating_info_layout.setVisibility(View.VISIBLE);
					viewHolder.appoint_list_item_dating_layout.setBackgroundResource(R.drawable.appoint_item_normal_card_bg);
				}
			}
		});

		// 如果设置了回调，则设置点击事件
		if (mOnItemClickLitener != null) {
			viewHolder.appoint_list_item_root_layout.setOnClickListener(new View.OnClickListener() {
				@Override
				public void onClick(View v) {
					int pos = viewHolder.getLayoutPosition();
					mOnItemClickLitener.onItemClick(viewHolder.appoint_list_item_root_layout, pos);
				}
			});
		}


		viewHolder.appoint_list_item_userImg_iv.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				int position = viewHolder.getLayoutPosition();
				Bundle bundle = new Bundle();
				AppointmentDto dto=getDatas().get(position);
				bundle.putInt(YpSettings.USERID, dto.getOwner().getId());
				ActivityUtil.jump(mContext,UserInfoActivity.class, bundle, 0,100);
			}
		});
	}

	@Override
	public int getItemCount(){
		// 返回数据总数
		return list == null ? 0 : list.size();
	}

	// 重写的自定义ViewHolder
	public static class ViewHolder extends RecyclerView.ViewHolder{

		public RelativeLayout appoint_list_item_root_layout;

		public TextView appoint_list_item_name_tv;

		public TextView appoint_list_item_sex_hor_tv;

		public ImageView appoint_list_item_video_lable_iv;

		public ImageView appoint_list_item_level_men_iv;

		public ImageView  appoint_list_item_userImg_iv;

		public LinearLayout appoint_list_item_dating_layout;

		public LinearLayout appoint_list_item_dating_info_layout;

		public ImageView appoint_list_item_datingtype_iv;

		public TextView  appoint_list_item_datingtype_tv;

		public TextView  appoint_list_item_costtype_tv;

		public TextView  appoint_list_item_time_tv;

		public ImageView appoint_list_item_address_iv;

		public TextView  appoint_list_item_address_tv;

		public LinearLayout  appoint_list_item_pb_layout;

		public ProgressBar appoint_list_item_info_pb;

		public ProgressBar appoint_list_item_safe_pb;

		public ProgressBar appoint_list_item_qinmi_pb;

		public ProgressBarView appoint_list_item_all_pbv;

		public TextView  appoint_list_item_look_num_tv;

		public TextView  appoint_list_item_join_num_tv;


		public ViewHolder( View v ){
			super(v);

			appoint_list_item_root_layout= (RelativeLayout) v.findViewById(R.id.appoint_list_item_root_layout);

			appoint_list_item_name_tv= (TextView) v.findViewById(R.id.appoint_list_item_name_tv);

			appoint_list_item_sex_hor_tv= (TextView) v.findViewById(R.id.appoint_list_item_sex_hor_tv);

			appoint_list_item_video_lable_iv= (ImageView) v.findViewById(R.id.appoint_list_item_video_lable_iv);

			appoint_list_item_level_men_iv= (ImageView) v.findViewById(R.id.appoint_list_item_level_men_iv);

			appoint_list_item_userImg_iv= (ImageView) v.findViewById(R.id.appoint_list_item_userImg_iv);

			appoint_list_item_dating_layout= (LinearLayout) v.findViewById(R.id.appoint_list_item_dating_layout);

			appoint_list_item_dating_info_layout= (LinearLayout) v.findViewById(R.id.appoint_list_item_dating_info_layout);

			appoint_list_item_datingtype_iv= (ImageView) v.findViewById(R.id.appoint_list_item_datingtype_iv);

			appoint_list_item_datingtype_tv= (TextView) v.findViewById(R.id.appoint_list_item_datingtype_tv);

			appoint_list_item_costtype_tv= (TextView) v.findViewById(R.id.appoint_list_item_costtype_tv);

			appoint_list_item_time_tv= (TextView) v.findViewById(R.id.appoint_list_item_time_tv);

			appoint_list_item_address_iv= (ImageView) v.findViewById(R.id.appoint_list_item_address_iv);

			appoint_list_item_address_tv= (TextView) v.findViewById(R.id.appoint_list_item_address_tv);

			appoint_list_item_pb_layout= (LinearLayout) v.findViewById(R.id.appoint_list_item_pb_layout);

			appoint_list_item_info_pb= (ProgressBar) v.findViewById(R.id.appoint_list_item_info_pb);

			appoint_list_item_safe_pb= (ProgressBar) v.findViewById(R.id.appoint_list_item_safe_pb);

			appoint_list_item_qinmi_pb= (ProgressBar) v.findViewById(R.id.appoint_list_item_qinmi_pb);

			appoint_list_item_all_pbv= (ProgressBarView) v.findViewById(R.id.appoint_list_item_all_pbv);

			appoint_list_item_look_num_tv= (TextView) v.findViewById(R.id.appoint_list_item_look_num_tv);

			appoint_list_item_join_num_tv= (TextView) v.findViewById(R.id.appoint_list_item_join_num_tv);

		}
	}

	public void setData(List<AppointmentDto> list) {
		this.list = list;
	}

	public List<AppointmentDto> getDatas() {
		return list;
	}

//	public static int getImage(String pic) {
//		if(pic==null||pic.trim().equals("")){
//			return R.drawable.appoint_eat_bg_0;
//		}
//		Class draw = R.drawable.class;
//		try {
//			Field field = draw.getDeclaredField(pic);
//			return field.getInt(pic);
//		} catch (SecurityException e) {
//			return R.drawable.appoint_eat_bg_0;
//		} catch (NoSuchFieldException e) {
//			return R.drawable.appoint_eat_bg_0;
//		} catch (IllegalArgumentException e) {
//			return R.drawable.appoint_eat_bg_0;
//		} catch (IllegalAccessException e) {
//			return R.drawable.appoint_eat_bg_0;
//		}
//	}

	public void setSortType(int sort){
		sortType=sort;
	}
}
