package cn.chono.yopper.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.RelativeLayout;

import com.bumptech.glide.Glide;

import java.util.List;

import cn.chono.yopper.R;
import cn.chono.yopper.YpSettings;
import cn.chono.yopper.utils.ImgUtils;
import cn.chono.yopper.utils.UnitUtil;


public class DiscoverBubblingInfoIconAdapter extends BaseAdapter {

	public interface OnIconItemClickLitener {

		/**
		 * 内容图片点击监听
		 * 
		 * @param view
		 * @param position
		 */
		void onIconItemClick(View view, int position, List<String> list,
				int imgViewWidth, int imgViewHight);

	}

	private OnIconItemClickLitener mOnIconItemClickLitener;

	public void setOnIconItemClickLitener(
			OnIconItemClickLitener mOnIconItemClickLitener) {
		this.mOnIconItemClickLitener = mOnIconItemClickLitener;
	}

	private List<String> list;

	private Context context;

	float startScale;

	public DiscoverBubblingInfoIconAdapter(Context context) {
		this.context = context;
	}

	private class NewViewHolder {
		/**
		 * 图片
		 */
		private ImageView contentIcon;

	}

	public void setData(List<String> list) {
		this.list = list;
	}

	@Override
	public int getCount() {

		int size = 0;

		if (list == null) {
			size = 0;
		} else if (list.size() > 9) {
			size = 9;
		} else {

			size = list.size();
		}

		return size;
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	private NewViewHolder newViewHolder;

	@SuppressWarnings("unused")
	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		View v = null;
		if (v == null) {
			newViewHolder = new NewViewHolder();
			v = LayoutInflater.from(context).inflate(
					R.layout.discover_bubbling_item_icon_layout, null);

			newViewHolder.contentIcon = (ImageView) v
					.findViewById(R.id.contentIcon);
			newViewHolder.contentIcon.setScaleType(ScaleType.CENTER_CROP);
			int weight = UnitUtil.getScreenWidthPixels(context);
			RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) newViewHolder.contentIcon
					.getLayoutParams();
			int range = UnitUtil.dip2px(84,context);
			params.width = (weight - range) / 3;
			params.height = (weight - range) / 3;
			newViewHolder.contentIcon.setLayoutParams(params);
			v.setTag(newViewHolder);

		} else {
			newViewHolder = (NewViewHolder) v.getTag();
		}

		String url = list.get(position).toString();

		String imageurl = ImgUtils.DealImageUrl(url, YpSettings.IMG_SIZE_150,
				YpSettings.IMG_SIZE_150);

		Glide.with(context).load(imageurl).dontAnimate().centerCrop().error(R.drawable.error_user_icon)
				.into(newViewHolder.contentIcon);

		// 如果设置了回调，则设置点击事件
		if (mOnIconItemClickLitener != null) {
			newViewHolder.contentIcon.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {

					int wight = newViewHolder.contentIcon.getWidth();
					int hight = newViewHolder.contentIcon.getHeight();
					mOnIconItemClickLitener.onIconItemClick(
							newViewHolder.contentIcon, position, list, wight,
							hight);
				}
			});
		}

		return v;
	}

}
